# k8s-cassandra-pod.yml
# Author: Sudarshan D
# Description: Deploy Cassandra application as statefulset

###############################################################################################
#Test Steps:
#1. Check whether the OpenEBS components are deployed.
#2. Download the test artifacts to k8s master.
#3. Get the number of nodes and set the replica count accordingly.
#4. Deploy the cassandra service and the statefulset.
#5. Check if the application pod is up and running
#6. Generate the load.
#7. Perform cleanup of test artifacts.
###############################################################################################

- hosts: localhost

  vars_files:
    - k8s-cassandra-pod-vars.yml

  tasks:
   - block:

       - include: k8s-cassandra-pod-prereq.yml

       - name: 1) Download YAML for cassandra service
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/get_url.yml"
         vars:
           url: "{{ cassandra_service_link }}"
           dest: "{{ result_kube_home.stdout }}/{{ svc_yaml_alias }}"
           delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: 2a) Download YAML for cassandra statefulset
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/get_url.yml"
         vars:
           url: "{{ cassandra_stateful_link }}"
           dest: "{{ result_kube_home.stdout }}/{{ stateful_yaml_alias }}"
           delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: 2b) Download YAML for cassandra loadgen
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/get_url.yml"
         vars:
           url: "{{ cassandra_loadgen_link }}"
           dest: "{{ result_kube_home.stdout }}/{{ loadgen_yaml_alias }}"
           delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: 3) Get the number of nodes in the cluster
         shell: source {{ profile }}; kubectl get nodes | grep 'Ready' | grep 'none' | wc -l
         args:
           executable: /bin/bash
         register: node_out
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: 3a) Fetch the node count from stdout
         set_fact:
            node_count: " {{ node_out.stdout}}"

       - name: 3b) Replace the replica count in cassandra statefulset yaml
         replace:
           path: "{{ result_kube_home.stdout }}/{{ stateful_yaml_alias }}"
           regexp: 'replicas: 3'
           replace: 'replicas: {{ node_count }}'
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: 3c) Replace the io_duration in cassandra loadgen yaml
         replace:
           path: "{{ result_kube_home.stdout }}/{{ loadgen_yaml_alias }}"
           regexp: 'duration=5'
           replace: 'duration={{ io_minutes }}'
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: Check whether maya-apiserver pod is deployed
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/deploy_check.yml"
         vars:
            ns: openebs
            app: maya-api

       - name: 4) Deploy cassandra service
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/deploy_task.yml"
         vars:
           app_yml: "{{ svc_yaml_alias }}"
           ns: default

       - name: 4a) Deploy cassandra statefulset
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/deploy_task.yml"
         vars:
           app_yml: "{{ stateful_yaml_alias }}"
           ns: default

       - name: 5) Confirm cassandra pod status is running
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/deploy_check.yml"
         vars:
            ns: default
            app: cassandra-0

       - name: 6) Start cassandra load generation
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/deploy_task.yml"
         vars:
           app_yml: "{{ loadgen_yaml_alias }}"
           ns: default

       - name: 6a) Verify load is running for specified duration
         include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/deploy_check.yml"
         vars:
            ns: default
            app: cassandra-loadgen

       - name: Wait for {{ (io_minutes) | int *60 }} secs to run load.
         wait_for:
              timeout: "{{ (io_minutes) | int *60 }}"

       - name: 6b) Verify load by using describe keyspaces
         shell: source {{ profile }}; kubectl exec cassandra-0 -- cqlsh --execute "describe keyspaces;"
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         until: "'keyspace1' in result.stdout"
         delay: 60
         retries: 5

       - name: Test Passed
         set_fact:
           flag: "Test Passed"

     rescue:
       - name: Test Failed
         set_fact:
           flag: "Test Failed"

     always:
       - block:

           - include: k8s-cassandra-pod-cleanup.yml

           - name: Test Cleanup Passed
             set_fact:
               cflag: "Cleanup Passed"

         rescue:
           - name: Test Cleanup Failed
             set_fact:
               cflag: "Cleanup Failed"

         always:

           - name: 5) Terminate the log aggregator
             shell: source ~/.profile; killall stern
             args:
               executable: /bin/bash
             delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

           - name: Send slack notification
             slack:
               token: "{{ lookup('env','SLACK_TOKEN') }}"
               msg: '{{ ansible_date_time.time }} TEST: {{test_name}}, RESULT: {{ flag }},{{ cflag }}'
             when: slack_notify | bool and lookup('env','SLACK_TOKEN')

